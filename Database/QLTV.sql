USE MASTER
GO
CREATE DATABASE QuanLyThuVien
GO
USE QuanLyThuVien
GO
CREATE TABLE LOAIDOCGIA
(
	IDLoaiDG int PRIMARY KEY NOT NULL,
	TenLoaiDG nvarchar(50) NOT NULL
)
GO
CREATE TABLE THEDOCGIA
(
	IDDocGia int PRIMARY KEY NOT NULL,
	HoTenDG nvarchar(50) NOT NULL,
	NgaySinhDG date NOT NULL,
	DiaChiDG nvarchar(50) NOT NULL,
	EmailDG varchar(30) NOT NULL,
	IDLoaiDG int FOREIGN KEY REFERENCES LOAIDOCGIA(IDLoaiDG),
	NgayLapThe date NOT NULL,
	NgayHetHan date,
	TongNo money DEFAULT(0)
)
GO
CREATE TABLE LOAISACH
(
	IDLoaiSach int PRIMARY KEY NOT NULL,
	TenLoaiSach nvarchar(50) NOT NULL
)
GO
CREATE TABLE DAUSACH
(
	IDDauSach int PRIMARY KEY NOT NULL,
	TenDauSach nvarchar(200) NOT NULL,
	IDLoaiSach int FOREIGN KEY REFERENCES LOAISACH(IDLoaiSach)
)
GO
CREATE TABLE TACGIA
(
	IDTacGia int PRIMARY KEY NOT NULL,
	TenTacGia nvarchar(50) NOT NULL,
	NgaySinh date NOT NULL
)
GO
CREATE TABLE SACH
(
	IDSach int PRIMARY KEY NOT NULL,
	IDDauSach int FOREIGN KEY REFERENCES DAUSACH(IDDauSach),
	IDTacGia int FOREIGN KEY REFERENCES TACGIA(IDTacGia),
	NhaXB nvarchar(20) NOT NULL,
	NamXB int NOT NULL,
	SoLuongTon int DEFAULT(0),
	GiaTien money DEFAULT(0) NOT NULL
)
GO
CREATE TABLE CUONSACH
(
	IDCuonSach int PRIMARY KEY NOT NULL,
	IDSach int FOREIGN KEY REFERENCES SACH(IDSach),
	TinhTrang nvarchar(20) DEFAULT(N'Chưa cho mượn') --o
)
GO
CREATE TABLE PHIEUNHAPSACH
(
	IDPhieuNhap int PRIMARY KEY NOT NULL,
	NgayNhap date NOT NULL,
	TongTien money DEFAULT(0) --o
)
GO
CREATE TABLE CT_PHIEUNHAPSACH
(
	IDCTPhieuNhap int PRIMARY KEY NOT NULL,
	IDPhieuNhap int FOREIGN KEY REFERENCES PHIEUNHAPSACH(IDPhieuNhap),
	IDSach int FOREIGN KEY REFERENCES SACH(IDSach),
	SoLuong int DEFAULT(0) NOT NULL,
	DonGia money DEFAULT(0) NOT NULL,
	ThanhTien money DEFAULT(0) --o
)
GO
CREATE TABLE PHIEUMUON
(
	IDPhieuMuon int PRIMARY KEY NOT NULL,	
	IDDocGia int FOREIGN KEY REFERENCES THEDOCGIA(IDDocGia),
	NgayMuon date NOT NULL,
	HanTra date --o
)
GO
CREATE TABLE CT_PHIEUMUON
(
	IDCTPhieuMuon int NOT NULL,
	IDPhieuMuon int FOREIGN KEY REFERENCES PHIEUMUON(IDPhieuMuon),
	IDCuonSach int FOREIGN KEY REFERENCES CUONSACH(IDCuonSach)
	CONSTRAINT PK_CPM PRIMARY KEY (IDCTPhieuMuon, IDCuonSach) --- 26/5
)
GO
CREATE TABLE PHIEUTRA
(
	IDPhieuTra int PRIMARY KEY NOT NULL,
	IDDocGia int FOREIGN KEY REFERENCES THEDOCGIA(IDDocGia),
	NgayTra date NOT NULL,
	TienPhatKyNay money DEFAULT(0),
	SoTienTra money DEFAULT(0),
	TienNoKyNay money DEFAULT(0)
)
GO
CREATE TABLE CT_PHIEUTRA
(
	IDCTPhieuTra int NOT NULL,
	IDPhieuTra int FOREIGN KEY REFERENCES PHIEUTRA(IDPhieuTra),
	IDCuonSach int FOREIGN KEY REFERENCES CUONSACH(IDCuonSach),
	IDPhieuMuon int FOREIGN KEY REFERENCES PHIEUMUON(IDPhieuMuon),
	SoNgayMuon int, --o
	TienPhat money DEFAULT(0) --o
	CONSTRAINT PK_CPT PRIMARY KEY (IDCTPhieuTra, IDCuonSach)
)
GO
CREATE TABLE PHIEUTHUTIENPHAT
(
	IDPhieuThu int PRIMARY KEY NOT NULL,
	IDDocGia int FOREIGN KEY REFERENCES THEDOCGIA(IDDocGia),
	NgayLap date NOT NULL,
	SoTienThu money DEFAULT(0),
	ConLai money DEFAULT(0) --O
)
GO
CREATE TABLE BCTINHHINHMUONSACH
(
	IDBCMuonSach int PRIMARY KEY NOT NULL,
	NgayLap date, --- 28/5
	Thang int NOT NULL,
	Nam int NOT NULL,	
	TongSoLuotMuon int DEFAULT(0) --o
)
GO
CREATE TABLE CT_BCTINHHINHMUONSACH
(
	IDCTBCMuonSach int PRIMARY KEY NOT NULL,
	IDBCMuonSach int FOREIGN KEY REFERENCES BCTINHHINHMUONSACH(IDBCMuonSach),
	IDLoaiSach int FOREIGN KEY REFERENCES LOAISACH(IDLoaiSach),
	SoLuotMuon int DEFAULT(0),
	TiLe float DEFAULT(0)
)
GO
CREATE TABLE BCSACHTRATRE
(
	IDBCSachTre int PRIMARY KEY NOT NULL,
	NgayThangNam date NOT NULL,
	IDCuonSach int FOREIGN KEY REFERENCES CUONSACH(IDCuonSach),
	IDPhieuMuon int FOREIGN KEY REFERENCES PHIEUMUON(IDPhieuMuon),
	SoNgayTraTre int 
)
GO
CREATE TABLE USERS
(
	UserName varchar(50) PRIMARY KEY NOT NULL,	
	Pwd varchar(50) NOT NULL,
	IDDocGia int FOREIGN KEY REFERENCES THEDOCGIA(IDDocGia)
)
GO
CREATE TABLE CT_USERADMIN
(	
	IDAdmin int PRIMARY KEY NOT NULL,
	HoTenAdmin nvarchar(50) NOT NULL,
	NgaySinhAdmin date NOT NULL,
	DiaChiAdmin nvarchar(50) NOT NULL,
	EmailAdmin varchar(30) NOT NULL
)
GO
CREATE TABLE USERADMIN
(	
	UserNameAdmin varchar(50) PRIMARY KEY NOT NULL,
	PasswordAdmin varchar(50) NOT NULL,
	IDAdmin int FOREIGN KEY REFERENCES CT_USERADMIN(IDAdmin) --- 21/5
)
GO
CREATE TABLE THAMSO
(
	TuoiMin int DEFAULT(18),
	TuoiMax int DEFAULT(55),
	HanThe int DEFAULT(6),
	KhoangCachXB int DEFAULT(8),
	SoSachMuonMax int DEFAULT(5),
	SoNgayMuonMax int DEFAULT(4),
	TienPhatMoiNgay money DEFAULT(1000),
	ApDungQDSoTienThu int DEFAULT(1)
)
GO
INSERT INTO THAMSO VALUES (18, 55, 6, 8, 5, 4, 1000, 1)


GO
--DROP TRIGGER TRG_IU_IDG
CREATE TRIGGER TRG_IU_IDG ON THEDOCGIA
FOR INSERT, UPDATE
AS
BEGIN

/*Tuổi độc giả*/
	DECLARE @NGAYSINHDG date, @NGAYLAPTHE date, @TUOIMIN int, @TUOIMAX int
	
	SELECT @NGAYSINHDG = NgaySinhDG, @NGAYLAPTHE = NgayLapThe
	FROM INSERTED
	SELECT @TUOIMIN = TuoiMin, @TUOIMAX = TuoiMax
	FROM THAMSO

	IF (DATEDIFF(year, @NGAYSINHDG, @NGAYLAPTHE) < @TUOIMIN OR DATEDIFF(year, @NGAYSINHDG,  @NGAYLAPTHE) > @TUOIMAX)
	BEGIN
		PRINT N'Lỗi: Tuổi của độc giả phải từ ' + CAST(@TUOIMIN AS varchar) + N' đến ' + CAST(@TUOIMAX AS varchar)
		ROLLBACK TRANSACTION
	END	

END
GO
--DROP TRIGGER TRG_ISA
CREATE TRIGGER TRG_ISA ON SACH
FOR INSERT, UPDATE
AS
BEGIN

/*Sách xuất bản 8 năm*/

	DECLARE @NAMXB int

	SELECT @NAMXB = NamXB
	FROM INSERTED

	DECLARE @NGAYNHAP date, @KHOANGCACHXB int

	SELECT @NGAYNHAP = A.NgayNhap 
	FROM INSERTED I, PHIEUNHAPSACH A, CT_PHIEUNHAPSACH B
	WHERE A.IDPhieuNhap = B.IDPhieuNhap AND B.IDSach = I.IDSach	
	SELECT @KHOANGCACHXB = KhoangCachXB
	FROM THAMSO

	IF((year(@NGAYNHAP) - @NAMXB) > @KHOANGCACHXB)
	BEGIN
		PRINT N'Lỗi: Chỉ nhận các sách xuất bản trong vòng ' + CAST(@KHOANGCACHXB AS varchar) + N' năm'
		ROLLBACK TRANSACTION
	END

END
GO
--DROP TRIGGER TRG_U_IPN
CREATE TRIGGER TRG_U_IPN ON PHIEUNHAPSACH
FOR UPDATE
AS
BEGIN

	DECLARE @NGAYNHAPI date, @NGAYNHAPD date, @KHOANGCACHXB int
	SELECT @NGAYNHAPI = I.NgayNhap, @NGAYNHAPD = D.NgayNhap
	FROM INSERTED I, DELETED D
	SELECT @KHOANGCACHXB = KhoangCachXB
	FROM THAMSO

	IF(@NGAYNHAPI <> @NGAYNHAPD)
	BEGIN
		DECLARE @ROWNUM int, @ROW int = 0
		SELECT @ROWNUM = (SELECT COUNT(*) FROM INSERTED I, CT_PHIEUNHAPSACH A
						  WHERE A.IDPhieuNhap = I.IDPhieuNhap)

		SELECT IDENTITY(int, 1, 1) AS Num, IDCTPhieuNhap, A.IDPhieuNhap, IDSach, SoLuong, DonGia, ThanhTien INTO #INSERTED FROM INSERTED I, CT_PHIEUNHAPSACH A
																																  WHERE A.IDPhieuNhap = I.IDPhieuNhap
		
		WHILE (@ROW < @ROWNUM)
		BEGIN
			SET @ROW += 1

			DECLARE @NAMXB int

			SELECT @NAMXB = NamXB 
			FROM #INSERTED I, SACH A
			WHERE A.IDSach = I.IDSach AND I.Num = @ROW

			IF((year(@NGAYNHAPI) - @NAMXB) > @KHOANGCACHXB)
			BEGIN
				PRINT N'Lỗi: Chỉ nhận các sách xuất bản trong vòng ' + CAST(@KHOANGCACHXB AS varchar) + N' năm'
				ROLLBACK TRANSACTION
			END
		END
	END

END
GO
--DROP TRIGGER TRG_IU_CPN
CREATE TRIGGER TRG_IU_CPN ON CT_PHIEUNHAPSACH
FOR INSERT, UPDATE
AS
BEGIN

/*Sách xuất bản 8 năm*/
	DECLARE @NGAYNHAP date, @NAMXB int, @KHOANGCACHXB int

	SELECT @NGAYNHAP = NgayNhap 
	FROM INSERTED I, PHIEUNHAPSACH A
	WHERE I.IDPhieuNhap = A.IDPhieuNhap
	SELECT @NAMXB = NamXB
	FROM INSERTED I, SACH A
	WHERE I.IDSach = A.IDSach
	SELECT @KHOANGCACHXB = KhoangCachXB
	FROM THAMSO

	IF((year(@NGAYNHAP) - @NAMXB) > @KHOANGCACHXB)
	BEGIN
		PRINT N'Lỗi: Chỉ nhận các sách xuất bản trong vòng ' + CAST(@KHOANGCACHXB AS varchar) + N' năm'
		ROLLBACK TRANSACTION
	END

END
GO
--DROP TRIGGER TRG_IU_CPM
CREATE TRIGGER TRG_IU_CPM ON CT_PHIEUMUON
FOR INSERT, UPDATE
AS
BEGIN

	DECLARE @IDDOCGIA int
		
	SELECT @IDDOCGIA = IDDocGia
	FROM INSERTED I, PHIEUMUON A
	WHERE I.IDPhieuMuon = A.IDPhieuMuon
		
	DECLARE @SOSACHMUONMAX int	
	
	SELECT @SOSACHMUONMAX = SoSachMuonMax
	FROM THAMSO

	IF((SELECT COUNT(DISTINCT A.IDCuonSach) 
		FROM CT_PHIEUMUON A, PHIEUMUON B
		WHERE A.IDPhieuMuon = B.IDPhieuMuon AND B.IDDocGia = @IDDOCGIA
		AND NOT EXISTS (SELECT * FROM CT_PHIEUTRA C, PHIEUTRA D
						WHERE C.IDCuonSach = A.IDCuonSach AND C.IDPhieuTra = D.IDPhieuTra
						AND D.NgayTra < B.NgayMuon))) > @SOSACHMUONMAX		
	BEGIN
		PRINT N'Lỗi: Mỗi độc giả chỉ mượn tối đa ' + CAST(@SOSACHMUONMAX AS varchar) + N' quyển sách'
		ROLLBACK TRANSACTION 
	END	

END
GO
--DROP TRIGGER TRG_IU_ITP
CREATE TRIGGER TRG_IU_ITP ON PHIEUTHUTIENPHAT
FOR INSERT, UPDATE
AS
BEGIN

/*Áp dụng QĐ số tiền thu*/
	DECLARE @SOTIENTHU money, @TONGNO money, @APDUNGQDSOTIENTHU int
	
	SELECT @SOTIENTHU = SoTienThu
	FROM INSERTED
	SELECT @TONGNO = TongNo
	FROM INSERTED I, THEDOCGIA A
	WHERE I.IDDocGia = A.IDDocGia
	SELECT @APDUNGQDSOTIENTHU = ApDungQDSoTienThu
	FROM THAMSO
	
	IF(@APDUNGQDSOTIENTHU = 1)
	BEGIN
		IF(@SOTIENTHU > @TONGNO)
		BEGIN
			PRINT N'Số tiền thu không được vượt quá số tiền độc giả đang nợ'
			ROLLBACK TRANSACTION
		END
	END

END

